---
- name: Update images in the configuration files if not running community
  include_tasks: modify_image_names.yml
    image_names="{{ openshift_istio_image_names }}"
  with_items: "{{ openshift_istio_yaml_configuration_files }} + {{ openshift_istio_jaeger_yaml_configuration_files }} + {{ openshift_istio_kiali_yaml_configuration_files }}"
  loop_control:
    loop_var: configuration
  when: not (openshift_istio_install_community | bool)

- name: Label Istio namespace so it is ignored by injection
  command: "{{ openshift_client_binary }} label namespace {{ openshift_istio_namespace }} istio.openshift.com/ignore-namespace=ignore"

- name: Create Istio components with auth
  command: "{{ openshift_client_binary }} create -f {{ openshift_istio_auth_yaml }}"
  ignore_errors: yes
  when: openshift_istio_install_auth | bool

- name: Create Istio components without auth
  command: "{{ openshift_client_binary }} create -f {{ openshift_istio_yaml }}"
  ignore_errors: yes
  when: not (openshift_istio_install_auth| bool)

- name: Wait for resource CRDs to establish
  shell: "{{ openshift_client_binary }} get --raw /apis/config.istio.io/v1alpha2/{{ item }}"
  register: result
  until: result.rc == 0
  retries: 10
  delay: 2
  ignore_errors: yes
  with_items: "{{ openshift_istio_resources }}"

- name: Retrieve istio-mixer-custom-resources ConfigMap
  command: "{{ openshift_client_binary }} extract -n {{ openshift_istio_namespace }} configmap/istio-mixer-custom-resources --to=/tmp --keys=custom-resources.yaml"

- name: Install mixer custom resources
  command: "{{ openshift_client_binary }} create -f /tmp/custom-resources.yaml"

- name: Set authenticated cluster role to enable access for all authenticated users
  command: "{{ openshift_client_binary }} create -f {{ openshift_istio_authenticated_clusterrole_yaml }}"

- name: Expose Istio ingress service
  command: "{{ openshift_client_binary }} expose -n {{ openshift_istio_namespace }} svc istio-ingress"

- name: Expose Istio ingress gateway service
  command: "{{ openshift_client_binary }} expose -n {{ openshift_istio_namespace }} svc istio-ingressgateway"

- name: Expose prometheus service
  command: "{{ openshift_client_binary }} expose -n {{ openshift_istio_namespace }} svc prometheus"
