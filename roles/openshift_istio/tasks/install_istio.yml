---
- name: Update images in the configuration files if not running community
  include_tasks: modify_image_names.yml
    image_names="{{ openshift_istio_image_names }}"
  with_items: "{{ openshift_istio_yaml_configuration_files }} + {{ openshift_istio_jaeger_yaml_configuration_files }}"
  loop_control:
    loop_var: configuration
  when: not (openshift_istio_install_community | bool)

- name: Create Istio components with auth
  command: "{{ openshift_client_binary }} create -f {{ openshift_istio_auth_yaml }}"
  ignore_errors: yes
  when: openshift_istio_install_auth | bool

- name: Create Istio components without auth
  command: "{{ openshift_client_binary }} create -f {{ openshift_istio_yaml }}"
  ignore_errors: yes
  when: not (openshift_istio_install_auth| bool)

- name: Retrieve istio-mixer-custom-resources ConfigMap
  command: "{{ openshift_client_binary }} get configmap -o json -n {{ openshift_istio_namespace }} istio-mixer-custom-resources"
  register: mixer_resources_configmap_output

- name: set config
  set_fact:
    mixer_resources_configmap: "{{ mixer_resources_configmap_output.stdout | from_json }}"

- name: Copy mixer custom resources
  copy: content="{{ mixer_resources_configmap.data['custom-resources.yaml'] }}" dest=/tmp/custom-resources.yaml

- name: Install mixer custom resources
  command: "{{ openshift_client_binary }} create -f /tmp/custom-resources.yaml"

- name: Expose Istio ingress service
  command: "{{ openshift_client_binary }} expose -n {{ openshift_istio_namespace }} svc istio-ingress"

- name: Expose Istio ingress gateway service
  command: "{{ openshift_client_binary }} expose -n {{ openshift_istio_namespace }} svc istio-ingressgateway"

- name: Expose prometheus service
  command: "{{ openshift_client_binary }} expose -n {{ openshift_istio_namespace }} svc prometheus"
